{
	"get_started_1": "When starting to work with this API, make sure you have a bot or user access key. Also, you should know what JSON is.<br><br>In order to call any API method, you need to send a request to the following address:",
	"get_keys": "Getting access keys",
	"get_started_2": "To obtain a user access key, you need to create or log in through the application. What it is - you can read below. <br> To create an application, go to the \"Applications\" tab, click on the \"+\" at the bottom of the screen, follow the instructions. Then go to the editor of the newly created application, click \"Create API access key\", specify the rights and get the key. You can find out about authorization in the section \"Widgets and authorization methods\"",
	"apps_and_bots": "Apps and bots",
	"get_started_3": "An application is a service authorized via the yunNet API. It can be used to log in to sites and applications on behalf of the user. <br> <br> A bot is a script that automatically reacts to events (for example, a new message). Bot and app tokens vary in capabilities and limitations. As you study the API, you will notice this more than once.",
	"auth_widget": "Auth widget",
	"auth_widget_1": "For authorization via yunNet. on other sites you can use the widget. With it, you can create a user access key.",
	"auth_widget_2": "To get such a widget, you need an application. You need to write a query like this:",
	"auth_widget_3": "The following parameters are passed here:<br> <ul><li> APP_ID (Integer) - application identifier </li><li> PERMISSIONS - the rights of the new access key. About them below </li><li> URL - where to redirect the user after receiving the authorization result </li></ul>",
	"permissions_for_token": "Permissions for access key",
	"permissions_for_token_1": "There are only <b> 4 </b> groups of rights for tokens: <br><br><b> Friends </b> - allows you to manage and view friends lists <br> <b> Messages </b> - allows you to interact with messages < br> <b> Settings </b> - allows you to get access to real time and account settings. <br> <b> Control </b> - allows you to get access to access keys and other dangerous actions.<br> <br> Group identifiers are counted from one, respectively, ie Friends - 1, Messages - 2 and so on. To specify the rights in requests, form a construction like:",
	"bots_keyboard": "Bots keyboards",
	"bots_keyboard_1": "The keyboard is an array with arrays containing objects with button properties. The keyboard shape is shown below:",
	"account.closeProfile": "Marks or unmarks a closed profile",
	"account.getSettings": "Gets profile settings",
	"account.isScreenNameUsed": "Shows whether the link is busy or not",
    "account.setPrivacySettings": "Sets privacy settings",
    "account.setProfileData": "Changes profile data",
    "account.toggleNotificationsSetting": "Turns on or off notifications",
    "account.toggleSoundSetting": "Turns on or off sound",
    "account.updatePhoto": "Updates or removes a profile photo",
    "account.updateScreenName": "Updates or removes the short link",
    "auth.get": "Allows to get an access token by login and password",
    "chats.addUser": "Adds a user or bot to a conversation",
    "chats.create": "Creates a chat",
    "chats.get": "Get a list of chats",
    "chats.getHistory": "Get the history of messages in a conversation",
    "chats.getInfo": "Get information about a conversation",
    "chats.getInfoByLink": "Get information about a conversation from a link",
    "chats.joinByLink": "Adds a user to a conversation using a link",
    "chats.muteUser": "Prevents or allows user to write",
    "chats.removeUser": "Removes a user or leaves a conversation",
    "chats.setLink": "Changes the link to the chat",
    "chats.setMemberLevel": "Sets the user's privilege level in the conversation",
    "chats.setPermission": "Sets the level for the permission group",
    "chats.updatePhoto": "Updates the conversation photo",
    "chats.updateTitle": "Updates the title of a conversation",
    "friends.add": "Adds or accepts a user as a friend",
    "friends.block": "Blocks or unblocks a user",
    "friends.delete": "Deletes a friend or rejects a friend request",
    "friends.get": "Gets a list of friends",
    "friends.getBlacklisted": "Get a list of blacklisted people",
    "friends.getOutcoming": "Get the list of outgoing tickets",
    "friends.getState": "Get the state of the relationship between users",
    "friends.getSubscribers": "Get a list of subscribers",
    "messages.send": "Sends a message to a conversation or conversation",
    "messages.getById": "Get a message from a conversation or dialogue",
    "messages.delete": "Deletes a message from a conversation or dialogue",
    "news.get": "Get a list of news",
    "notifications.get": "Get a list of notifications",
    "notifications.getById": "Receives a notification by its identifier",
    "notifications.read": "Reads a specific notification",
    "realtime.connect": "Get a link to access the Polling server",
    "uploads.getUploadQuery": "Get a query to upload a file",
    "uploads.uploadFile": "Uploads a file to the server by its query",
    "users.get": "Get information about a user",
    "users.resolveScreenName": "Get the user ID from the short name",
    "users.search": "Searches for users",
    "wall.get": "Get entries from the user's wall",
    "wall.getById": "Get a record by its data",
    "account.closeProfile_description": "This method can be used to close or open a user's profile, that is, restrict access to the profile to those who are not on the user's friend list",
    "account.getSettings_description": "This method can be used to get information about the current account settings",
    "account.isScreenNameUsed_description": "With this method, you can find out if the selected short link is occupied by someone or not",
    "account.setPrivacySettings_description": "You can change your privacy settings using this method",
    "account.setProfileData_description": "This method can be used to update the profile data (last name and first name)",
    "account.toggleNotificationsSetting_description": "This method can be used to enable or disable notifications",
    "account.toggleSoundSetting_description": "This method can be used to enable or disable notification sound",
    "account.updatePhoto_description": "You can use this method to update your profile photo",
    "account.updateScreenName_description": "This method can be used to change the short link for the user. The short link must have only Latin characters and numbers. It must not start with a space.",
    "auth.get_description": "Allows authorization by login and password in the application. The application must have access to direct authorization. The method can be called without an access key",
    "chats.addUser_description": "You can invite the user to a conversation using this method. The invitee must be a friend of yours.",
    "chats.create_description": "This method can be used to create a conversation. The method is also called from the bot account.",
    "chats.get_description": "Using this method, you can get information about the chat list. Called from the bot account. If called from the bot account, then information about the last message and reading is not displayed",
    "chats.getHistory_description": "Using this method, you can get the history of messages in the dialog",
    "chats.getInfo_description": "Using this method, you can get information about the CONVERSATION (members, name, etc.). Called using the bot account.",
    "chats.getInfoByLink_description": "This method can be used to find out information about the conversation you would like to link to",
    "chats.joinByLink_description": "Using this method, you can join the conversation by its link. To join it, you must never be in it. If you have already been there, then you will receive an error, where the additional information will contain the chat_id of this conversations ",
    "chats.muteUser_description": "This method can be used to prevent the user from writing in the conversation or allow it. Called from the bot account. You must have sufficient permission in the conversation to execute."
    "chats.removeUser_description": "You can use this method to exclude a user or leave the conversation yourself. Called from the bot account. You must have sufficient permission in the conversation to execute."
    "chats.setLink_description": "With this method you can change the link to the conversation. Can only be called by the creator. Called from the bot account.",
    "chats.setMemberLevel_description": "With this method, you can change the level of privilege of a participant in the conversation. A sufficient level is required for this. Called from the bot account.",
    "chats.setPermission_description": "With this method, you can change the minimum level for performing an action in a conversation. Only the creator can. Called from the bot account.",
    "chats.updatePhoto_description": "With this method you can change or delete the photo of the conversation. Called from the bot account. Level required to complete",
    "chats.updateTitle_description": "With this method you can change the name of the conversation. Called from the bot account. Requires a level to execute",
    "friends.add_description": "Sends a friend request to a user or accepts a friend request from someone.",
    "friends.block_description": "Adds or removes a user from the blacklist.",
    "friends.delete_description": "With this method you can delete a user from friends or reject an application",
    "friends.get_description": "With this method you can see the list of the user's friends",
    "friends.getBlacklisted_description": "With this method you can find out who is on your blacklist.",
    "friends.getOutcoming_description": "With this method you can see YOUR outgoing tickets",
    "friends.getState_description": "With this method you can find out the state of your friendship. <br> <br> Possible states: <b> 0 </b> - Not friends <br> <b> 1 </b> - Some of you have submitted an application. <b> 2 </b> - Friendship confirmed on both sides. ",
    "friends.getSubscribers_description": "With this method you can see a list of the user's subscribers.",
    "messages.send_description": "This method allows you to send a message. Called using the bot account",
    "messages.getById_description": "With this method you can get information about a specific message in the chat",
    "messages.delete_description": "With this method you can delete messages for yourself or for everyone. Called using the bot account",
    "news.get_description": "With this method you can get a list of news",
    "notifications.get_description": "With this method you can get a list of CURRENT UNREAD notifications",
    "notifications.getById_description": "With this method you can get information about a specific notification",
    "notifications.read_description": "With this method you can read a specific notification",
    "realtime.connect_description": "Allows to get data to connect to the Polling server. Called from the bot account.",
    "uploads.getUploadQuery_description": "Allows to get data for sending a file to the server. Called from the bot account.",
    "uploads.uploadFile_description": "Allows to send a file to the server according to its data. Called from the bot account",
    "users.get_description": "Gets information about users. No more than 100 identifiers per request. Called from the bot account",
    "users.resolveScreenName_description": "Returns the user ID for its short link. Called from the bot account",
    "users.search_description": "Allows you to search for users. Called from the bot account.",
    "wall.get_description": "Get entries from the user's wall. Called from the bot account",
    "wall.getById_description": "Get information about a specific post from its data. Called from the bot account.",
    "params": "Parameters",
    "errors": "Possible errors",
    "returns": "Returned values",
    "request": "Request example",
    "no_params": "The method takes no parameters",
    "param_name": "Parameter",
    "error_code": "Error code",
    "param_desc": "Description",
    "screen_name_param": "User's short link. It can contain symbols of the Latin alphabet and a number. Must not start with a space",
   	"muted_error": "You were not allowed to write to this chat.",
    "longtext_error": "The message is too long",
    "emptytext_error": "The message is empty",
    "unknown_error": "Unknown error on the server",
    "keyboard_error": "The keyboard was sent not from the bot account",
    "keyboard_parse_error": "Error while parsing the keyboard",
    "return_message_id": "The method will return the identifier of the new chat message.",
    "result": "Result",
    "mode_param": "Connection mode. Possible values: sse, polling. The first connects in Server Sent Events mode, and the second will send events using the Long Poll mechanism.",
    "returns_json": "The method will return JSON with the following fields:",
    "url_result": "Link for receiving new events. Send a GET request to it. Then everything will depend on the connection mechanism.",
    "last_event_id_result": "Identifier of the last received event. Integer. It is needed to recover lost events. You can add the string & last_event_id = {ID} to the received link to get events from this place",
    "owner_id_result": "Link owner id",
    "can_return_all_errors": "The method can be one of the common errors.",
    "query_result": "File upload line",
    "query_param": "The string to upload the file, obtained from the uploads.getUploadQuery method",
    "file_param": "Multipart / form-data file. This method is called via POST request",
    "upload_error": "Unable to uplaod the file",
    "return_attachment_object": "This method returns attachment object",
    "user_ids_param": "User IDs, separated by commas. Not more than 100. For example: 18,4,1",
    "return_user_objects_array": "The method will return an array of user objects",
    "return_true_false": "The method will return 0 if the name is free, or 1 - if it is busy",
    "id_result": "Entity identifier. Positive number - user, negative - bot",
    "account_type_result": "Account type. String - can be: user (user), bot (bot)",
    "return_array_of_posts": "Method will return the array of object of wall posts",
    "message_ids_param": "The message IDs of this dialog, separated by commas. For example: 1626,918,3829",
    "delete_for_all_param": "Boolean value. 1 or 0. Deletes messages for everyone or not",
    "message_id_deletion_state": "Deletion status. Number. 1 - deleted, 0 - not",
    "chat_id_param": "Conversation ID. It can be obtained by multiplying peer_id by -1",
    "entity_id_param": "Entity identifier. Positive number - user, negative - bot",
    "can_not_by_privacy_settings": "Unable to take action due to user privacy settings",
    "unknown_invite_error": "Failed to invite user",
    "already_in_chat": "The user is already in a chat",
    "leaved_the_chat": "The user left the chat",
    "not_found_in_chat": "User not found in the chat",
    "return_one_if_mute": "Returns 1 if the user was allowed to write to the chat, or 0 if they were forbidden",
    "extended_param": "Extended information. Accepts values: 0 or 1. The default is 0.",
    "title_result": "Conversation title",
    "photo_url_result": "Link to the main photo of the conversation",
    "members_result": "Object with information about members. If extended = 1, then the profiles field will contain objects of users and bots, otherwise - their identifiers.",
    "permissions_result": "Object with information about permission settings in the conversation",
    "count_result": "Number of data found",
    "items_messages_result": "Array of message objects",
	"q_param": "Query string. Not longer than 128 characters",
    "offset_param": "Offset from the start of the data",
    "count_param": "Amount of received data",
    "return_dialogs_array": "The method will return an array of dialog objects",
    "member_id_param": "Member ID. Positive number - user, negative - bot",
    "level_param": "New permissions level",
    "count_error": "An error occurred while selecting members",
    "title_error": "Conversation title is too long or contains invalid characters",
    "unknown_creation_error": "Failed to create conversation due to unknown error",
    "return_chat_id": "Returns the conversation ID for the current entity",
    "link_param": "Chat link",
    "already_link_chat": "Most likely, you have already been or are in this conversation",
    "chat_not_found": "The link to the conversation is out of date or contains errors",
    "return_chat_link": "Return link to the chat",
    "return_one_if_changes": "Returns 1 if successful, or 0 if there is no change",
    "permission_param": "Group of rights. Line. For example: can_change_title. You can see the available groups of rights in the list of objects or by calling the chats.getInfo method on the current chat_id",
    "new_value_param": "A new level for this group. Possible values from 0 to 8",
    "photo_param": "New photo. Construction of the form photo<owner_id>_<id>_<access_key>. Do not pass this parameter to delete",
    "photo_is_incorrect": "Incorrect photo construction.",
    "return_one_if_closed": "Returns 1 if the profile is closed, or 0 if it is open",
    "account_json_result": "Account information (language, closed)",
    "privacy_json_result": "State of the current privacy settings",
    "push_json_result": "The state of the current notification and sound settings",
    "messages.edit": "Edits a message",
    "messages.edit_description": "With this method you can edit a message. Called from the bot account.",
    "not_found_message_error": "Message not found in conversation",
    "not_permitted_message_error": "You do not have permission to edit this post (most likely you are not the owner of the post)",
    "message_id_param": "Message ID",
    "account.toggleNotificationSetting": "Turns the display of notifications on or off",
    "likes.add": "Likes the attachment",
    "likes.remove": "Removes a like mark from an attachment",
    "likes.getLiked": "Gets a list of all attachments that have been Liked by the current user",
    "likes.getLikersList": "Gets a list of all users who liked this attachment",
    "wall.createPost": "Create post",
    "wall.editPost": "Editing post",
    "wall.commentPost": "Allows you to post comments",
    "wall.editComment": "Allows editing the comment",
    "wall.deletePost": "Deletes a post",
    "wall.deleteComment": "Deletes a comment",
    "app_id_param": "Application ID",
    "login_param": "Email address or phone number of the user",
    "password_param": "User password",
    "title_param": "Title. How the conversation, application, etc. will be called",
    "user_id_param": "User or bot identifier. Integer. For bot - negative number",
    "wall_id_param": "Post ID. Integer. Typically user or bot ID",
    "post_id_param": "ID of the post on the wall. If we take wall4_123, then the ID of the post will be 123",
    "id_param": "Notification ID. Positive integer"
}